{"mappings":"AAAA,eAAe,kBAAkB,SAAS;IACtC,IAAI;QACA,gDAAgD;QAChD,MAAM,gBAAgB,MAAM,MAAM,iEAAiE;YAC/F,QAAQ;YACR,aAAa;QACjB;QAEA,MAAM,aAAY,SAAS,aAAa,CAAC;QACzC,WAAU,SAAS,GAAG,IAAI,mBAAmB;QAE7C,IAAI,CAAC,cAAc,EAAE,EAAE;YACnB,wDAAwD;YACxD,WAAU,SAAS,GAAG,CAAC;;;;YAIvB,CAAC;YACD;QACJ;QAEA,MAAM,YAAY,MAAM,cAAc,IAAI;QAC1C,IAAI,CAAC,UAAU,QAAQ,EAAE;YACrB,gCAAgC;YAChC,WAAU,SAAS,GAAG,CAAC;;;;YAIvB,CAAC;YACD;QACJ;QAEA,qDAAqD;QACrD,MAAM,mBAAmB,MAAM,MAAM,CAAC,mEAAmE,EAAE,WAAW,EAAE;YACpH,QAAQ;YACR,aAAa;QACjB;QAEA,IAAI,CAAC,iBAAiB,EAAE,EAAE;YACtB,0CAA0C;YAC1C,QAAQ,KAAK,CAAC;YACd,WAAU,SAAS,GAAG,CAAC,kDAA4C,CAAC;YACpE;QACJ;QAEA,MAAM,eAAe,MAAM,iBAAiB,IAAI;QAChD,IAAI,sBAAsB,aAAa,UAAU,GAAG,qBAAqB;QAEzE,gCAAgC;QAChC,WAAU,SAAS,GAAG,CAAC;;4CAEa,EAAE,UAAU,6EAA6E,EAAE,UAAU;yCACxG,EAAE,UAAU,SAAS,EAAE,oBAAoB;;;QAG5E,CAAC;IACL,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,wDAAwD;QACtE,UAAU,SAAS,GAAG,CAAC,kCAAkC,CAAC;IAC9D;AACJ;AAEA,eAAe,eAAe,SAAS;IACnC,IAAI;QACA,MAAM,eAAe,SAAS,cAAc,CAAC,CAAC,cAAc,EAAE,WAAW;QACzE,IAAI,SAAS,aAAa,SAAS,CAAC,QAAQ,CAAC,gBAAgB,SAAS;QAEtE,IAAI,MAAM,CAAC,6DAA6D,EAAE,WAAW,SAAS,QAAQ,YAAY,WAAW;QAE7H,IAAI,UAAU;YACV,QAAQ;YACR,aAAa;QACjB;QAEA,IAAI,WAAW,QAAQ;YACnB,yDAAyD;YACzD,QAAQ,OAAO,GAAG;gBACd,gBAAgB;YACpB;YACA,QAAQ,IAAI,GAAG,KAAK,SAAS,CAAC;gBAAE,WAAW;YAAU;QACzD;QAEA,MAAM,WAAW,MAAM,MAAM,KAAK;QAElC,IAAI,CAAC,SAAS,EAAE,EAAE;YACd,QAAQ,KAAK,CAAC;YACd;QACJ;QAEA,IAAI,WAAW,QAAQ;YACnB,aAAa,SAAS,CAAC,MAAM,CAAC;YAC9B,aAAa,SAAS,CAAC,GAAG,CAAC;QAC/B,OAAO;YACH,aAAa,SAAS,CAAC,MAAM,CAAC;YAC9B,aAAa,SAAS,CAAC,GAAG,CAAC;QAC/B;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,+CAA+C;IACjE;AACJ,EAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA8BC","sources":["public/js/account/isFavoritesLogged.js"],"sourcesContent":["async function isFavoritesLogged(podcastId) {\n    try {\n        // Zuerst prüfen, ob der Benutzer eingeloggt ist\n        const loginResponse = await fetch('https://webengineering.ins.hs-anhalt.de:10062/auth/isLoggedIn', {\n            method: 'GET',\n            credentials: 'include'\n        });\n\n        const container = document.querySelector('.podcastdetail-right-content.under-right-container');\n        container.innerHTML = ''; // Container leeren\n\n        if (!loginResponse.ok) {\n            // Benutzer ist nicht eingeloggt oder Session abgelaufen\n            container.innerHTML = `\n                <div class=\"account-administration-profildata-not-logged-in\">\n                    <p>Sie sind nicht eingeloggt. Bitte melden Sie sich an.</p>\n                </div>\n            `;\n            return;\n        }\n\n        const loginData = await loginResponse.json();\n        if (!loginData.loggedIn) {\n            // Benutzer ist nicht eingeloggt\n            container.innerHTML = `\n                <div class=\"account-administration-profildata-not-logged-in\">\n                    <p>Sie sind nicht eingeloggt.</p>\n                </div>\n            `;\n            return;\n        }\n\n        // Benutzer ist eingeloggt, überprüfe Favoritenstatus\n        const favoriteResponse = await fetch(`https://webengineering.ins.hs-anhalt.de:10062/auth/favorites/check/${podcastId}`, {\n            method: 'GET',\n            credentials: 'include'\n        });\n\n        if (!favoriteResponse.ok) {\n            // Fehler beim Abrufen des Favoritenstatus\n            console.error('Fehler beim Abrufen des Favoritenstatus');\n            container.innerHTML = `<p>Fehler beim Überprüfen der Favoriten.</p>`;\n            return;\n        }\n\n        const favoriteData = await favoriteResponse.json();\n        let favoriteStatusClass = favoriteData.isFavorite ? 'fa-solid fa-star' : 'fa-regular fa-star';\n\n        // Zeige den Favoriten-Button an\n        container.innerHTML = `\n            <div class=\"account-administration-profildata-logged-in\">\n                <button id=\"favorite-button-${podcastId}\" class=\"podcastdetail-right-favorite-podcast-star\" onclick=\"toggleFavorite('${podcastId}')\">\n                    <i id=\"favorite-icon-${podcastId}\" class=\"${favoriteStatusClass}\"></i>\n                </button>\n            </div>\n        `;\n    } catch (error) {\n        console.error('Fehler beim Abrufen des Login- oder Favoritenstatus:', error);\n        container.innerHTML = `<p>Ein Fehler ist aufgetreten.</p>`;\n    }\n}\n\nasync function toggleFavorite(podcastId) {\n    try {\n        const favoriteIcon = document.getElementById(`favorite-icon-${podcastId}`);\n        let method = favoriteIcon.classList.contains('fa-regular') ? 'POST' : 'DELETE';\n\n        let url = `https://webengineering.ins.hs-anhalt.de:10062/auth/favorites/${method === 'POST' ? 'add' : 'remove/' + podcastId}`;\n\n        let options = {\n            method: method,\n            credentials: 'include'\n        };\n\n        if (method === 'POST') {\n            // Für POST-Anfragen die podcastId im Request Body senden\n            options.headers = {\n                'Content-Type': 'application/json'\n            };\n            options.body = JSON.stringify({ podcastId: podcastId });\n        }\n\n        const response = await fetch(url, options);\n\n        if (!response.ok) {\n            console.error('Fehler beim Aktualisieren des Favoritenstatus');\n            return;\n        }\n\n        if (method === 'POST') {\n            favoriteIcon.classList.remove('fa-regular');\n            favoriteIcon.classList.add('fa-solid');\n        } else {\n            favoriteIcon.classList.remove('fa-solid');\n            favoriteIcon.classList.add('fa-regular');\n        }\n    } catch (error) {\n        console.error('Fehler beim Umschalten des Favoritenstatus:', error);\n    }\n}\n\n/*\n// Funktion zum Umschalten des Favoritenstatus\nasync function toggleFavorite(podcastId) {\n    try {\n        const favoriteIcon = document.getElementById(`favorite-icon-${podcastId}`);\n        let method = favoriteIcon.classList.contains('fa-regular') ? 'POST' : 'DELETE'; // POST zum Hinzufügen, DELETE zum Entfernen\n\n        const response = await fetch(`https://webengineering.ins.hs-anhalt.de:10062/auth/favorites/${method === 'POST' ? 'add' : 'remove'}/${podcastId}`, {\n            method: method,\n            credentials: 'include'\n        });\n\n        if (!response.ok) {\n            console.error('Fehler beim Aktualisieren des Favoritenstatus');\n            return;\n        }\n\n        // Aktualisiere das Icon basierend auf dem neuen Status\n        if (method === 'POST') {\n            favoriteIcon.classList.remove('fa-regular');\n            favoriteIcon.classList.add('fa-solid');\n        } else {\n            favoriteIcon.classList.remove('fa-solid');\n            favoriteIcon.classList.add('fa-regular');\n        }\n    } catch (error) {\n        console.error('Fehler beim Umschalten des Favoritenstatus:', error);\n    }\n}\n\n */"],"names":[],"version":3,"file":"public.5fe0deca.js.map","sourceRoot":"/__parcel_source_root/"}