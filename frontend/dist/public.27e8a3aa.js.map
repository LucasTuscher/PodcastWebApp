{"mappings":"AAAA,SAAS;IACL,MAAM,OAAO,SAAS,aAAa,CAAC;IAEpC,IAAI,CAAC,MAAM;QACP,QAAQ,KAAK,CAAC;QACd;IACJ;IAEA,KAAK,gBAAgB,CAAC,UAAU,eAAgB,KAAK;QACjD,MAAM,cAAc,IAAI,oCAAoC;QAE5D,yBAAyB;QACzB,MAAM,WAAW;YACb,WAAW,SAAS,aAAa,CAAC,wCAAwC,MAAM,UAAU;YAC1F,UAAU,SAAS,aAAa,CAAC,uCAAuC,MAAM,UAAU;YACxF,OAAO,SAAS,aAAa,CAAC,oCAAoC,MAAM,UAAU;YAClF,UAAU,SAAS,aAAa,CAAC,uCAAuC,SAAS;YACjF,iBAAiB,SAAS,aAAa,CAAC,+CAA+C,SAAS;QACpG;QAEA,kCAAkC;QAClC,QAAQ,GAAG,CAAC,mCAAmC,KAAK,SAAS,CAAC,UAAU,MAAM;QAE9E,6BAA6B;QAC7B,IAAI,CAAC,SAAS,SAAS,IAAI,CAAC,SAAS,QAAQ,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,SAAS,QAAQ,IAAI,CAAC,SAAS,eAAe,EAAE;YACjH,MAAM;YACN;QACJ;QAEA,IAAI,CAAC,SAAS,KAAK,CAAC,QAAQ,CAAC,MAAM;YAC/B,MAAM;YACN;QACJ;QAEA,IAAI,SAAS,QAAQ,CAAC,MAAM,GAAG,GAAG;YAC9B,MAAM;YACN;QACJ;QAEA,IAAI,SAAS,QAAQ,KAAK,SAAS,eAAe,EAAE;YAChD,MAAM;YACN;QACJ;QAEA,gCAAgC;QAChC,IAAI;YACA,MAAM,WAAW,MAAM,MAAM,+DAA+D;gBACxF,QAAQ;gBACR,SAAS;oBACL,UAAU;oBACV,gBAAgB;gBACpB;gBACA,MAAM,KAAK,SAAS,CAAC;oBACjB,WAAW,SAAS,SAAS;oBAC7B,UAAU,SAAS,QAAQ;oBAC3B,OAAO,SAAS,KAAK;oBACrB,UAAU,SAAS,QAAQ;gBAC/B;YACJ;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,QAAQ,GAAG,CAAC,mBAAmB;YAE/B,IAAI,SAAS,EAAE,EAAE;gBACb,mDAAmD;gBACnD,MAAM;gBAEN,+BAA+B;gBAC/B,MAAM,gBAAgB,MAAM,MAAM,4DAA4D;oBAC1F,QAAQ;oBACR,SAAS;wBACL,UAAU;wBACV,gBAAgB;oBACpB;oBACA,MAAM,KAAK,SAAS,CAAC;wBACjB,OAAO,SAAS,KAAK;wBACrB,UAAU,SAAS,QAAQ;oBAC/B;oBACA,aAAa,UAAU,2CAA2C;gBACtE;gBAEA,MAAM,YAAY,MAAM,cAAc,IAAI;gBAC1C,IAAI,cAAc,EAAE,EAAE;oBAClB,MAAM;oBACN,WAAW,SAAS,yCAAyC;oBAC7D,OAAO,QAAQ,CAAC,MAAM,IAAI,mDAAmD;gBACjF,OAAO;oBACH,MAAM,CAAC,QAAQ,EAAE,UAAU,KAAK,EAAE;oBAClC,QAAQ,KAAK,CAAC,6BAA6B;gBAC/C;YACJ,OAAO;gBACH,MAAM,CAAC,QAAQ,EAAE,KAAK,KAAK,EAAE;gBAC7B,QAAQ,KAAK,CAAC,kBAAkB;YACpC;QACJ,EAAE,OAAO,OAAO;YACZ,MAAM,mBAAmB,MAAM,OAAO;YACtC,QAAQ,KAAK,CAAC,iCAAiC;QACnD;IACJ;AACJ","sources":["public/js/account/register.js"],"sourcesContent":["function setRegisterFormListener() {\n    const form = document.querySelector('.register-auth-form');\n\n    if (!form) {\n        console.error(\"Fehler: Das Registrierungsformular wurde nicht gefunden.\");\n        return;\n    }\n\n    form.addEventListener('submit', async function (event) {\n        event.preventDefault(); // Verhindert das Neuladen der Seite\n\n        // Formulardaten auslesen\n        const formData = {\n            firstname: document.querySelector('.register-auth-form-input-firstname')?.value.trim() || '',\n            username: document.querySelector('.register-auth-form-input-username')?.value.trim() || '',\n            email: document.querySelector('.register-auth-form-input-email')?.value.trim() || '',\n            password: document.querySelector('.register-auth-form-input-password')?.value || '',\n            passwordConfirm: document.querySelector('.register-auth-form-input-password-confirm')?.value || ''\n        };\n\n        // Debugging: Formulardaten prüfen\n        console.log(\"Formulardaten vor dem Absenden:\", JSON.stringify(formData, null, 2));\n\n        // Client-seitige Validierung\n        if (!formData.firstname || !formData.username || !formData.email || !formData.password || !formData.passwordConfirm) {\n            alert(\"Bitte alle Felder ausfüllen.\");\n            return;\n        }\n\n        if (!formData.email.includes('@')) {\n            alert(\"Bitte eine gültige E-Mail-Adresse eingeben.\");\n            return;\n        }\n\n        if (formData.password.length < 6) {\n            alert(\"Das Passwort muss mindestens 6 Zeichen lang sein.\");\n            return;\n        }\n\n        if (formData.password !== formData.passwordConfirm) {\n            alert(\"Die Passwörter stimmen nicht überein.\");\n            return;\n        }\n\n        // Anfrage an das Backend senden\n        try {\n            const response = await fetch('https://webengineering.ins.hs-anhalt.de:10062/auth/register', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    firstname: formData.firstname,\n                    username: formData.username,\n                    email: formData.email,\n                    password: formData.password\n                })\n            });\n\n            const data = await response.json();\n            console.log(\"Server Antwort:\", data);\n\n            if (response.ok) {\n                // Benutzer direkt nach der Registrierung einloggen\n                alert('Registrierung erfolgreich.');\n\n                // Login nach der Registrierung\n                const loginResponse = await fetch('https://webengineering.ins.hs-anhalt.de:10062/auth/login', {\n                    method: 'POST',\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        email: formData.email,\n                        password: formData.password\n                    }),\n                    credentials: 'include' // Wichtig, um das Session-Cookie zu setzen\n                });\n\n                const loginData = await loginResponse.json();\n                if (loginResponse.ok) {\n                    alert('Login erfolgreich.');\n                    navigateTo('home'); // Weiterleitung nach erfolgreichem Login\n                    window.location.reload(); // Seite neu laden, um die Session zu aktualisieren\n                } else {\n                    alert(`Fehler: ${loginData.error}`);\n                    console.error(\"Server-Fehler beim Login:\", loginData);\n                }\n            } else {\n                alert(`Fehler: ${data.error}`);\n                console.error(\"Server-Fehler:\", data);\n            }\n        } catch (error) {\n            alert('Serverfehler: ' + error.message);\n            console.error(\"Netzwerk- oder Serverproblem:\", error);\n        }\n    });\n}\n"],"names":[],"version":3,"file":"public.27e8a3aa.js.map","sourceRoot":"/__parcel_source_root/"}